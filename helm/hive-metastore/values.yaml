# Hive metastore database configuration.
db:
  # -- Hive metastore driver reference.
  driverRef: org.postgresql.Driver
  # -- Hive metastore driver name.
  driverName: postgresql
  # -- Hive metastore database host.
  host:
  # -- Hive metastore database port.
  port: 5432
  # -- Hive metastore database name.
  databaseName: hms
  user:
    # -- Hive metastore database user.
    name: hms
    # Hive metastore database credentials.
    password:
      # -- Hive metastore database existing kubernetes secret name.
      secretName:
      # -- Hive metastore database existing kubernetes secret key containing the password.
      propertyName:

# S3 warehouse configuration
s3:
  # -- S3 endpoint
  url:
  # -- S3 warehouse directory/bucket name
  warehouseDirectory:
  accessKey:
    # -- S3 access key existing kubernetes secret name
    secretName:
    # -- S3 access key kubernetes secret key containing the accessKey
    propertyName:
  secretKey:
    # -- S3 secret key existing kubernetes secret name
    secretName:
    # -- S3 secret key kubernetes secret key containing the secretName
    propertyName:
  # -- Proxy configuration (if needed)
  proxy:
    host:
    port:
  requestTimeout: 0

aws:
  # -- AWS Pod execution IAM role
  podIamRole:
  # -- S3 IAM role ARN for hive-metastore access to S3
  s3AssumeRoleArn:

# As the metastore does not provide authentication/authorization mechanism,
# everybody will be able to access and modify all metastore data.
# So, we need to restrict access only from allowed namespace
networkPolicies:
  enabled: true
  allowedNamespaceLabels: {}
  allowedNamespace: []

# -- Desired number of hive-metastore pods to run.
replicaCount: 2

# -- Resource requests and limits for the hive-metastore pod.
resources:
  limits:
    cpu: 500m
    memory: 1024Mi
  requests:
    cpu: 100m
    memory: 512Mi

# -- Log4j2 log level. One of `` `debug`, `info`, `warn`, `error`, `fatal`, `trace`
logLevel: INFO

# -- Hive metastore database initialization job
initJob:
  ttlSecondsAfterFinished: 60

# -- Allow the metastore to be reachable from outside of the cluster
# @raw
#
# ⚠️ As the metastore does not provide authentication/authorization mechanism, everybody will be able
#   to access and modify all metastore data.
#   So use this feature only
#   - Temporary, for test and debugging
#   - If access to your cluster is strictly controlled by some firewall, which will limit access to the
#     exposed address and port.
#
exposure:
  loadbalancer:
    # Only metallb is currently supportcd ed by the helm chart. Contribution welcome.
    metallb:
      enabled: no
      externalIp:
      ipSharingKey:
  nodePort:
    enabled: no
    value:

# Configuration for the Docker image to use.
image:
  # -- Image pullSecrets for private registries.
  pullSecrets: []
  # -- Docker image registry.
  repository: quay.io/okdp/hive-metastore
  # -- Image tag.
  tag: 3.1.3-1.1.0
  # -- Image pull policy.
  pullPolicy: IfNotPresent

podSecurityContext:
  runAsNonRoot: true
  seccompProfile:
    type: RuntimeDefault

containerSecurityContext:
  allowPrivilegeEscalation: false
  readOnlyRootFilesystem: false
  capabilities:
    drop:
      - "ALL"

# -- Hive metastore service port
servicePort: 9083

# -- Annotations to be added to the pod
podAnnotations: {}

# -- Annotations to be added to all resources
commonAnnotations: {}


# Following will allow a renaming of all metastore kubernetes resources
# Keep default values in usual cases.
# -- Allow chart name overriding
nameOverride:
# -- Allow overriding base name of all resources
fullNameOverride:
# -- Will default to {{ include "metastore.fullname" . }}
deploymentName:
# -- Will default to {{ include "metastore.fullname" . }}
jobName:
# -- Will default to {{ include "metastore.fullname" . }}
serviceName:
# -- Will default to {{ include "metastore.fullname" . }}
networkPolicyName:
